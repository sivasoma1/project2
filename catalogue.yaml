- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: NPM install
    ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash

  - name: install NPM
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: checking the user exist or not
    ansible.builtin.command: id roboshop
    register: output #it prints the output of user
    ignore_errors: true

  - when: output.rc !=0
    name: create a user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: to check the directory exist or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False

  - name: create a directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: install the url
    ansible.builtin.get_url:
      src: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: unarchive
    ansible.builtin.unarchive:
      src: /tmp
      dest: /app
      remote_src: yes 

  - name: installing dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app


  - name: copy
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: deamon
    ansible.builtin.systemd:
      deamon_reload: true

  - name: catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
  - name: copy 
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: installing
    ansible.builtin.yum: 
      name: mongodb-org-shell
      state: present

  - name: connection
    ansible.builtin.command: mongo --host mongo.ssshankar.site </app/schema/catalogue.js

  - name: restart
    ansible.builtin.restart:
      name: catalogue
      state: restarted
      enabled: yes



    
